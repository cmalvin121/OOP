namespace game_framework
{
class Boss
{
    public:
        Boss();
        void Initialize();
        void LoadBitMap();
        void OnShow();
        int getX();
        int getY();
        int getScreenX();
        int getScreenY();
		int getLife();
        bool getAlive();
        void setXY(int nx, int ny);
        void setScreen_XY(int nx, int ny);
        void deductLife(int damage);
        void OnMove(int RockX, int RockY);
        void DeterminAttack(int RockX, int RockY);
        bool MonsterCollision(int, int);
        int MonsterCannonCollision(int, int);
		bool GetStartAttack();
        void FixCannonScreenXY(int, int);
    private:
        CMovingBitmap boss;
		CMovingBitmap bossLeft;
		CMovingBitmap lifeItem;
		CMovingBitmap lifeValue;
		CAnimation bossKill;
		CAnimation bossKillLeft;
		CAnimation hugeknife;
		CAnimation bossDestoryLight;
		CAnimation bossSprint;
		CAnimation bossSprintLeft;
		CAnimation bossFire;
		CAnimation bossFireLeft;
		CAnimation bossChop;
		CAnimation bossChopLeft;
		CAnimation knife;
		CAnimation knifeLeft;
		void LoadHugeknifeBitMap();
		void LoadBossDestoryLightBitMap();
		void LoadBossSprintBitMap();
		void LoadBossSprintLeftBitMap();
		void LoadBossFireBitMap();
		void LoadBossFireLeftBitMap();
		void LoadBossChopBitMap();
		void LoadBossChopLeftBitMap();
		void LoadBossKillBitMap();
		void LoadBossKillLeftBitMap();
		void LoadKnifeBitMap();
		void LoadKnifeLeftBitMap();
		void LoadLifeObjectBitmap();
		void ResetAnimation();
        BossCannon cannon[6];
        int x, y;
        int screen_x, screen_y;
        int life;
        int AttackDirection;
		int KillDirection;
		int reverse;
		int AttackCommand[15];
		int commandProcess;
		bool isInjured;
		int injureDelay;
		int injureShine;
		bool startAttack;
		int attackDelay;
        bool isAlive;
		bool isfire;
        int skill;
		void Stay();
		void Sprint();
		void Fire();
		void FireFlySword(int RockX, int RockY);
		void DestroyLight();
		void Kill();
		bool isPlaySound;
		int destroyLightCount;
};
}